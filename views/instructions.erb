<!doctype html>
<html>
  <head>
    <title>FRCLinks Usage Instructions</title>
    <style>
      body {
        text-align: center;
      }

      form {
        border-radius: 5px;
        background-color: #def;
        display: inline-block;
        max-width:80%;
        padding: 0.75rem 0;
      }

      input[type="text"] {
        width: 35em;
        max-width:80%;
        height: 1.8em;
        border-radius: 3px;
        font-size: 1.1em;
      }

      input[type="submit"] {
        height: 2em;
        border-radius: 3px;
        font-size: 1.1em;
      }

      table {
        margin: 0 auto 2em auto;
        text-align: left;
        line-height: 1.4em;
      }

      tr:nth-child(2n) {
        background: #def;
      }

      th {
        padding-bottom: 1em;
      }

      th, td {
        padding-left: 0.5em;
        padding-right: 0.5em;
      }

      #commands td:nth-child(1), #commands td:nth-child(2) {
        font-weight: bold;
      }

      #commands td:nth-child(3) {
        font-style: italic;
      }

      #eventcodes td:nth-child(3n) {
        padding-right: 2em;
      }

      #suggestion-box-container {
        position: absolute;
        border: 1px solid #888;
        background: #def;
        border-radius: 0 0 5px 5px;
        overflow-y: auto;
      }

      #all-suggestions {
        width: 100%;
        margin-bottom: 0;
        font-size: 0.85rem;
      }

      #all-suggestions td:nth-child(3) {
        font-style: italic;
      }

      .suggestion {
        cursor: pointer;
        line-height: 1.6em;
      }

      .suggestion:hover {
        background-color: #eff;
      }
    </style>
  </head>
  <body>
    <form onsubmit="window.location = this.url.value; return false;" action="GET">
      <input type="text" name="url" />
      <input type="submit" value="Go" />
    </form>
    <p>Usage instructions: <b>frc.link/</b> +
    <table id="commands">
      <tr>
        <th>Command</th>
        <th>Short form</th>
        <th>Operand(s)</th>
        <th>Go to the...</th>
      </tr>
      <tr>
        <td>/team</td>
        <td>/t</td>
        <td></td>
        <td>List of all registered FRC teams.</td>
      </tr>
      <tr>
        <td>/team/</td>
        <td>/t/</td>
        <td>team number</td>
        <td>FIRST information page for the given team.</td>
      </tr>
      <tr>
        <td>/team/</td>
        <td>/t/</td>
        <td>country/[state or province]</td>
        <td>Team list for the given area.</td>
      </tr>
      <tr>
        <td>/website/</td>
        <td>/w/</td>
        <td>team number</td>
        <td>Website of the given team.</td>
      </tr>
      <tr>
        <td>/map/</td>
        <td>/m/</td>
        <td>team number</td>
        <td>Map of the given team's location.</td>
      </tr>
      <tr>
        <td>/tba/</td>
        <td></td>
        <td>team number</td>
        <td>Blue Alliance page for the given team.</td>
      </tr>
      <tr>
        <td>/cdm/</td>
        <td></td>
        <td>team number</td>
        <td>Chief Delphi Media page for photos tagged with the given team.</td>
      </tr>
      <tr>
        <td colspan="4">&nbsp;</td>
      </tr>
      <tr>
        <td>/event/</td>
        <td>/e/</td>
        <td>event id/[year]</td>
        <td>Team list for the given event ID (see below for codes).</td>
      </tr>
      <tr>
        <td>/event/qualifications/</td>
        <td>/e/q/</td>
        <td>event id/[year]</td>
        <td>Qualification match schedule and results for the given event ID
            (see below for codes).</td>
      </tr>
      <tr>
        <td>/event/playoffs/</td>
        <td>/e/p/</td>
        <td>event id/[year]</td>
        <td>Playoff match schedule and results for the given event ID
            (see below for codes).</td>
      </tr>
      <tr>
        <td>/event/rankings/</td>
        <td>/e/r/</td>
        <td>event id/[year]</td>
        <td>Rankings for the given event ID (see below for codes).</td>
      </tr>
      <tr>
        <td>/event/awards/</td>
        <td>/e/a/</td>
        <td>event id/[year]</td>
        <td>Awards for the given event ID (see below for codes).</td>
      </tr>
      <tr>
        <td>/event/agenda/</td>
        <td>/e/g/</td>
        <td>event id/[year]</td>
        <td>Agenda for the given event ID (see below for codes).</td>
      </tr>
      <tr>
        <td>/event/tba/</td>
        <td>/e/tba/</td>
        <td>event id/[year]</td>
        <td>Blue Alliance page for the given event ID (see below for codes).</td>
      </tr>
      <tr>
        <td>/event/covid/</td>
        <td>/e/v/</td>
        <td>event id/[year]</td>
        <td>COVID site information for the given event ID (see below for codes).</td>
      </tr>
      <tr>
        <td>/districtrankings/</td>
        <td>/dr/</td>
        <td>district code</td>
        <td>Rankings page for the given district code.</td>
      </tr>
      <tr>
        <td>/kickoff</td>
        <td>/ko</td>
        <td></td>
        <td>FRC Kickoff page.</td>
      </tr>
      <tr>
        <td>/regionals</td>
        <td>/r</td>
        <td>/[year]</td>
        <td>Regional Events page.</td>
      </tr>
      <tr>
        <td>/championship</td>
        <td>/c</td>
        <td></td>
        <td>Championship Event page.</td>
      </tr>
      <tr>
        <td colspan="4">&nbsp;</td>
      </tr>
      <tr>
        <td>/documents</td>
        <td>/d</td>
        <td>/[year]</td>
        <td>Competition Manual page.</td>
      </tr>
      <tr>
        <td>/documents/</td>
        <td>/d/</td>
        <td>rule number</td>
        <td>Specific rule in the manual.</td>
      </tr>
      <tr>
        <td>/kitofparts</td>
        <td>/k</td>
        <td></td>
        <td>Kit of Parts page.</td>
      </tr>
      <tr>
        <td>/updates</td>
        <td>/u</td>
        <td></td>
        <td>Team Updates page.</td>
      </tr>
      <tr>
        <td>/blog</td>
        <td>/b</td>
        <td></td>
        <td>FRC blog.</td>
      </tr>
      <tr>
        <td>/forums</td>
        <td>/f</td>
        <td></td>
        <td>FIRST forums.</td>
      </tr>
      <tr>
        <td>/qa</td>
        <td>/q</td>
        <td></td>
        <td>Q&amp;A forum.</td>
      </tr>
      <tr>
        <td>/news</td>
        <td>/n</td>
        <td></td>
        <td>FRC news page. </td>
      </tr>
      <tr>
        <td>/calendar</td>
        <td>/cal</td>
        <td></td>
        <td>FRC calendar. </td>
      </tr>
      <tr>
        <td>/youtube</td>
        <td>/y</td>
        <td></td>
        <td>FRC YouTube channel. </td>
      </tr>
      <tr>
        <td>/tims</td>
        <td></td>
        <td></td>
        <td>FRC TIMS login page. </td>
      </tr>
      <tr>
        <td>/stims</td>
        <td></td>
        <td></td>
        <td>STIMS login page. </td>
      </tr>
      <tr>
        <td>/vims</td>
        <td></td>
        <td></td>
        <td>VIMS login page. </td>
      </tr>
    </table>
    <p><b>FIRST Event Codes</b></p>
    <table id="eventcodes">
      <% num_rows = (@events.size + 2) / 3 %>
      <% num_rows.times do |i| %>
        <tr>
          <td><%= @events[i]["code"] %></td>
          <td><%= @events[i]["name"] %></td>
          <td><%= @events[num_rows + i]["code"] %></td>
          <td><%= @events[num_rows + i]["name"] %></td>
          <td><%= @events[2 * num_rows + i]["code"] rescue "" %></td>
          <td><%= @events[2 * num_rows + i]["name"] rescue "" %></td>
        </tr>
      <% end %>
    </table>
    <p><a href="mailto:admin@frclinks.com">Contact the webmaster</a></p>
    <script>
      (function () {
        'use strict';

        var SUGGESTION_BOX_CONTAINER_ID = 'suggestion-box-container';
        var SUGGESTION_TABLE_ID = 'all-suggestions';
        var COMMAND_SELECTOR = '#commands tr';
        var urlEntryBox = document.querySelector('input[name="url"]');


        /**
         * Parse the table of commands to generate a list of objects with
         * details on the command, any operands it may have, and its meaning.
         *
         * @return {Array.<{command: string,
         *                  minicmd: string,
         *                  operand: string,
         *                  meaning: string}>} List of available commands.
         */
        function generateCommandList() {
          var commandTableRows = document.querySelectorAll(COMMAND_SELECTOR);
          var commandData = [];

          for (var i = 0; i < commandTableRows.length; i++) {
            var currentRowElements = commandTableRows.item(i).children
            if (currentRowElements.item(0).tagName === 'TH' ||
                currentRowElements.length < 4) {
              continue;
            }
            if (currentRowElements.item(0).textContent !== '' ||
                currentRowElements.item(1).textContent !== '') {
              commandData.push({
                command: currentRowElements.item(0).textContent,
                minicmd: currentRowElements.item(1).textContent,
                operand: currentRowElements.item(2).textContent,
                meaning: currentRowElements.item(3).textContent
              });
            }
          }

          return commandData;
        }


        /**
         * No longer display the suggestion box if it is currently visible
         */
        function removeSuggestionBox() {
          var box = document.getElementById(SUGGESTION_BOX_CONTAINER_ID);
          if (box) {
            document.body.removeChild(box);
          }
        }


        /**
         * Render a suggestion box with the given list of suggestions.
         *
         * @param {HTMLElement} attachTo UI element to attach the box to.
         * @param {Array.<{command: string,
         *                 minicmd: string,
         *                 operand: string,
         *                 meaning: string}>} The list of relevant suggestions.
         */
        function showSuggestionBox(attachTo, suggestions) {
          var boxBounds = attachTo.getBoundingClientRect();
          var suggestionBoxElem = document.createElement('div');
          suggestionBoxElem.id = SUGGESTION_BOX_CONTAINER_ID;
          suggestionBoxElem.style.top = boxBounds.bottom - 1 + 'px';
          suggestionBoxElem.style.left = boxBounds.left + 'px';
          suggestionBoxElem.style.width = boxBounds.width - 2 + 'px';
          suggestionBoxElem.style.maxHeight = '40%';

          var suggestionTableElem = document.createElement('table');
          suggestionTableElem.id = SUGGESTION_TABLE_ID;
          suggestions.forEach(function (cmd) {
            var cmdRowElem = document.createElement('tr');
            cmdRowElem.classList.add('suggestion');
            cmdRowElem.addEventListener('click', function () {
              urlEntryBox.value = cmd.command !== '' ? cmd.command : cmd.minicmd;
            });
            cmdRowElem.innerHTML = '<td>' + cmd.command + '</td>' +
                                   '<td>' + cmd.minicmd + '</td>' +
                                   '<td>' + cmd.operand + '</td>' +
                                   '<td>' + cmd.meaning + '</td>';
            suggestionTableElem.appendChild(cmdRowElem);
          });
          suggestionBoxElem.appendChild(suggestionTableElem);

          var oldElem = document.getElementById(SUGGESTION_BOX_CONTAINER_ID);
          if (oldElem) {
            document.body.replaceChild(suggestionBoxElem, oldElem);
          } else {
            document.body.appendChild(suggestionBoxElem);
          }
        }


        var commandList = generateCommandList();

        urlEntryBox.addEventListener('blur', function () {
          setTimeout(removeSuggestionBox, 100);
        });

        urlEntryBox.addEventListener('focus', function () {
          urlEntryBox.dispatchEvent(new CustomEvent('keyup'));
        });

        urlEntryBox.addEventListener('keyup', function () {
          var typedSoFar = urlEntryBox.value;
          if (typedSoFar.length < 1) {  // Too short to autocomplete.
            removeSuggestionBox();
            return;
          }

          var inputRE = RegExp('^/?' + typedSoFar);
          var matchingCommands = commandList.filter(function (cmd) {
            return (inputRE.test(cmd.command) || inputRE.test(cmd.minicmd));
          });

          if (matchingCommands.length === 0) {
            removeSuggestionBox();
          } else {
            showSuggestionBox(urlEntryBox, matchingCommands);
          }
        });

        urlEntryBox.addEventListener('keydown', function (keyEvent) {
          if (keyEvent.keyCode === 9) {  // Tab key
            keyEvent.preventDefault();
            var inputRE = RegExp('^/?' + urlEntryBox.value);
            var longestPrefix = commandList.reduce(function (commonPrefix, cmd) {
              var curCmd = '';
              if (inputRE.test(cmd.command)) {
                curCmd = cmd.command;
              } else if (inputRE.test(cmd.minicmd)) {
                curCmd = cmd.minicmd;
              } else {
                return commonPrefix;
              }

              if (commonPrefix === null) {
                commonPrefix = curCmd;
              } else {
                var currentMatch = '';
                for (var i = 0;
                     i < Math.min(commonPrefix.length, curCmd.length);
                     i++) {
                  if (commonPrefix[i] === curCmd[i]) {
                    currentMatch += curCmd[i];
                  } else {
                    break;
                  }
                }
                if (currentMatch.length < commonPrefix.length) {
                  commonPrefix = currentMatch;
                }
              }
              return commonPrefix;
            }, null);
            if (longestPrefix !== null) {
              urlEntryBox.value = longestPrefix;
              urlEntryBox.dispatchEvent(new CustomEvent('keyup'));
            }
          }
        });

      })();
    </script>
  </body>
</html>
